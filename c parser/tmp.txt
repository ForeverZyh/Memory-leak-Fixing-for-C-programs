int *x;
void foo(int* x,int *y)
{
	int t=*x;
	*x=*y;
	*y=t;
}
int* foo1(int*a,int*b)
{
	a=malloc(sizeof(int));
	foo(a,b);
	return a;
}
int main()
{
	int *y=malloc(sizeof(int));
	x=malloc(sizeof(int));
	foo(x,y);
	int *x=malloc(sizeof(int)),*z=foo1(x,y);
	foo(foo1(z,x),y);
	return 0;
}
588
translation_unit
 translation_unit
  translation_unit
   translation_unit
    external_declaration
     declaration
      declaration_specifiers
       INT
      init_declarator_list
       init_declarator
        declarator
         *
         direct_declarator
          x
   external_declaration
    function_definition
     declaration_specifiers
      VOID
     declarator
      direct_declarator
       direct_declarator
        foo
       parameter_type_list
        parameter_list
         parameter_list
          parameter_declaration
           declaration_specifiers
            INT
           declarator
            *
            direct_declarator
             x
         parameter_declaration
          declaration_specifiers
           INT
          declarator
           *
           direct_declarator
            y
     compound_statement
      block_item_list
       block_item_list
        block_item_list
         block_item
          declaration
           declaration_specifiers
            INT
           init_declarator_list
            init_declarator
             declarator
              direct_declarator
               t
             initializer1
              assignment_expression
               conditional_expression
                logical_or_expression
                 logical_and_expression
                  inclusive_or_expression
                   exclusive_or_expression
                    and_expression
                     equality_expression
                      relational_expression
                       shift_expression
                        additive_expression
                         multiplicative_expression
                          cast_expression
                           unary_expression
                            *
                            cast_expression
                             unary_expression
                              postfix_expression
                               x
        block_item
         statement
          expression_statement
           expression
            assignment_expression
             unary_expression
              *
              cast_expression
               unary_expression
                postfix_expression
                 x
             =
             assignment_expression
              conditional_expression
               logical_or_expression
                logical_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         cast_expression
                          unary_expression
                           *
                           cast_expression
                            unary_expression
                             postfix_expression
                              y
       block_item
        statement
         expression_statement
          expression
           assignment_expression
            unary_expression
             *
             cast_expression
              unary_expression
               postfix_expression
                y
            =
            assignment_expression
             conditional_expression
              logical_or_expression
               logical_and_expression
                inclusive_or_expression
                 exclusive_or_expression
                  and_expression
                   equality_expression
                    relational_expression
                     shift_expression
                      additive_expression
                       multiplicative_expression
                        cast_expression
                         unary_expression
                          postfix_expression
                           t
  external_declaration
   function_definition
    declaration_specifiers
     INT
    declarator
     *
     direct_declarator
      direct_declarator
       foo1
      parameter_type_list
       parameter_list
        parameter_list
         parameter_declaration
          declaration_specifiers
           INT
          declarator
           *
           direct_declarator
            a
        parameter_declaration
         declaration_specifiers
          INT
         declarator
          *
          direct_declarator
           b
    compound_statement
     block_item_list
      block_item_list
       block_item_list
        block_item
         statement
          expression_statement
           expression
            assignment_expression
             unary_expression
              postfix_expression
               a
             =
             assignment_expression
              conditional_expression
               logical_or_expression
                logical_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         cast_expression
                          unary_expression
                           function
                            postfix_expression
                             malloc
                            argument_expression_list
                             assignment_expression
                              conditional_expression
                               logical_or_expression
                                logical_and_expression
                                 inclusive_or_expression
                                  exclusive_or_expression
                                   and_expression
                                    equality_expression
                                     relational_expression
                                      shift_expression
                                       additive_expression
                                        multiplicative_expression
                                         cast_expression
                                          unary_expression
                                           type_name
                                            specifier_qualifier_list
                                             INT
       block_item
        statement
         expression_statement
          expression
           assignment_expression
            conditional_expression
             logical_or_expression
              logical_and_expression
               inclusive_or_expression
                exclusive_or_expression
                 and_expression
                  equality_expression
                   relational_expression
                    shift_expression
                     additive_expression
                      multiplicative_expression
                       cast_expression
                        unary_expression
                         function
                          postfix_expression
                           foo
                          argument_expression_list
                           argument_expression_list
                            assignment_expression
                             conditional_expression
                              logical_or_expression
                               logical_and_expression
                                inclusive_or_expression
                                 exclusive_or_expression
                                  and_expression
                                   equality_expression
                                    relational_expression
                                     shift_expression
                                      additive_expression
                                       multiplicative_expression
                                        cast_expression
                                         unary_expression
                                          postfix_expression
                                           a
                           assignment_expression
                            conditional_expression
                             logical_or_expression
                              logical_and_expression
                               inclusive_or_expression
                                exclusive_or_expression
                                 and_expression
                                  equality_expression
                                   relational_expression
                                    shift_expression
                                     additive_expression
                                      multiplicative_expression
                                       cast_expression
                                        unary_expression
                                         postfix_expression
                                          b
      block_item
       statement
        RETURN
         expression
          assignment_expression
           conditional_expression
            logical_or_expression
             logical_and_expression
              inclusive_or_expression
               exclusive_or_expression
                and_expression
                 equality_expression
                  relational_expression
                   shift_expression
                    additive_expression
                     multiplicative_expression
                      cast_expression
                       unary_expression
                        postfix_expression
                         a
 external_declaration
  function_definition
   declaration_specifiers
    INT
   declarator
    direct_declarator
     direct_declarator
      main
   compound_statement
    block_item_list
     block_item_list
      block_item_list
       block_item_list
        block_item_list
         block_item_list
          block_item
           declaration
            declaration_specifiers
             INT
            init_declarator_list
             init_declarator
              declarator
               *
               direct_declarator
                y
              initializer1
               assignment_expression
                conditional_expression
                 logical_or_expression
                  logical_and_expression
                   inclusive_or_expression
                    exclusive_or_expression
                     and_expression
                      equality_expression
                       relational_expression
                        shift_expression
                         additive_expression
                          multiplicative_expression
                           cast_expression
                            unary_expression
                             function
                              postfix_expression
                               malloc
                              argument_expression_list
                               assignment_expression
                                conditional_expression
                                 logical_or_expression
                                  logical_and_expression
                                   inclusive_or_expression
                                    exclusive_or_expression
                                     and_expression
                                      equality_expression
                                       relational_expression
                                        shift_expression
                                         additive_expression
                                          multiplicative_expression
                                           cast_expression
                                            unary_expression
                                             type_name
                                              specifier_qualifier_list
                                               INT
         block_item
          statement
           expression_statement
            expression
             assignment_expression
              unary_expression
               postfix_expression
                x
              =
              assignment_expression
               conditional_expression
                logical_or_expression
                 logical_and_expression
                  inclusive_or_expression
                   exclusive_or_expression
                    and_expression
                     equality_expression
                      relational_expression
                       shift_expression
                        additive_expression
                         multiplicative_expression
                          cast_expression
                           unary_expression
                            function
                             postfix_expression
                              malloc
                             argument_expression_list
                              assignment_expression
                               conditional_expression
                                logical_or_expression
                                 logical_and_expression
                                  inclusive_or_expression
                                   exclusive_or_expression
                                    and_expression
                                     equality_expression
                                      relational_expression
                                       shift_expression
                                        additive_expression
                                         multiplicative_expression
                                          cast_expression
                                           unary_expression
                                            type_name
                                             specifier_qualifier_list
                                              INT
        block_item
         statement
          expression_statement
           expression
            assignment_expression
             conditional_expression
              logical_or_expression
               logical_and_expression
                inclusive_or_expression
                 exclusive_or_expression
                  and_expression
                   equality_expression
                    relational_expression
                     shift_expression
                      additive_expression
                       multiplicative_expression
                        cast_expression
                         unary_expression
                          function
                           postfix_expression
                            foo
                           argument_expression_list
                            argument_expression_list
                             assignment_expression
                              conditional_expression
                               logical_or_expression
                                logical_and_expression
                                 inclusive_or_expression
                                  exclusive_or_expression
                                   and_expression
                                    equality_expression
                                     relational_expression
                                      shift_expression
                                       additive_expression
                                        multiplicative_expression
                                         cast_expression
                                          unary_expression
                                           postfix_expression
                                            x
                            assignment_expression
                             conditional_expression
                              logical_or_expression
                               logical_and_expression
                                inclusive_or_expression
                                 exclusive_or_expression
                                  and_expression
                                   equality_expression
                                    relational_expression
                                     shift_expression
                                      additive_expression
                                       multiplicative_expression
                                        cast_expression
                                         unary_expression
                                          postfix_expression
                                           y
       block_item
        declaration
         declaration_specifiers
          INT
         init_declarator_list
          init_declarator_list
           init_declarator
            declarator
             *
             direct_declarator
              x
            initializer1
             assignment_expression
              conditional_expression
               logical_or_expression
                logical_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         cast_expression
                          unary_expression
                           function
                            postfix_expression
                             malloc
                            argument_expression_list
                             assignment_expression
                              conditional_expression
                               logical_or_expression
                                logical_and_expression
                                 inclusive_or_expression
                                  exclusive_or_expression
                                   and_expression
                                    equality_expression
                                     relational_expression
                                      shift_expression
                                       additive_expression
                                        multiplicative_expression
                                         cast_expression
                                          unary_expression
                                           type_name
                                            specifier_qualifier_list
                                             INT
          init_declarator
           declarator
            *
            direct_declarator
             z
           initializer1
            assignment_expression
             conditional_expression
              logical_or_expression
               logical_and_expression
                inclusive_or_expression
                 exclusive_or_expression
                  and_expression
                   equality_expression
                    relational_expression
                     shift_expression
                      additive_expression
                       multiplicative_expression
                        cast_expression
                         unary_expression
                          function
                           postfix_expression
                            foo1
                           argument_expression_list
                            argument_expression_list
                             assignment_expression
                              conditional_expression
                               logical_or_expression
                                logical_and_expression
                                 inclusive_or_expression
                                  exclusive_or_expression
                                   and_expression
                                    equality_expression
                                     relational_expression
                                      shift_expression
                                       additive_expression
                                        multiplicative_expression
                                         cast_expression
                                          unary_expression
                                           postfix_expression
                                            x
                            assignment_expression
                             conditional_expression
                              logical_or_expression
                               logical_and_expression
                                inclusive_or_expression
                                 exclusive_or_expression
                                  and_expression
                                   equality_expression
                                    relational_expression
                                     shift_expression
                                      additive_expression
                                       multiplicative_expression
                                        cast_expression
                                         unary_expression
                                          postfix_expression
                                           y
      block_item
       statement
        expression_statement
         expression
          assignment_expression
           conditional_expression
            logical_or_expression
             logical_and_expression
              inclusive_or_expression
               exclusive_or_expression
                and_expression
                 equality_expression
                  relational_expression
                   shift_expression
                    additive_expression
                     multiplicative_expression
                      cast_expression
                       unary_expression
                        function
                         postfix_expression
                          foo
                         argument_expression_list
                          argument_expression_list
                           assignment_expression
                            conditional_expression
                             logical_or_expression
                              logical_and_expression
                               inclusive_or_expression
                                exclusive_or_expression
                                 and_expression
                                  equality_expression
                                   relational_expression
                                    shift_expression
                                     additive_expression
                                      multiplicative_expression
                                       cast_expression
                                        unary_expression
                                         function
                                          postfix_expression
                                           foo1
                                          argument_expression_list
                                           argument_expression_list
                                            assignment_expression
                                             conditional_expression
                                              logical_or_expression
                                               logical_and_expression
                                                inclusive_or_expression
                                                 exclusive_or_expression
                                                  and_expression
                                                   equality_expression
                                                    relational_expression
                                                     shift_expression
                                                      additive_expression
                                                       multiplicative_expression
                                                        cast_expression
                                                         unary_expression
                                                          postfix_expression
                                                           z
                                           assignment_expression
                                            conditional_expression
                                             logical_or_expression
                                              logical_and_expression
                                               inclusive_or_expression
                                                exclusive_or_expression
                                                 and_expression
                                                  equality_expression
                                                   relational_expression
                                                    shift_expression
                                                     additive_expression
                                                      multiplicative_expression
                                                       cast_expression
                                                        unary_expression
                                                         postfix_expression
                                                          x
                          assignment_expression
                           conditional_expression
                            logical_or_expression
                             logical_and_expression
                              inclusive_or_expression
                               exclusive_or_expression
                                and_expression
                                 equality_expression
                                  relational_expression
                                   shift_expression
                                    additive_expression
                                     multiplicative_expression
                                      cast_expression
                                       unary_expression
                                        postfix_expression
                                         y
     block_item
      statement
       RETURN
        expression
         assignment_expression
          conditional_expression
           logical_or_expression
            logical_and_expression
             inclusive_or_expression
              exclusive_or_expression
               and_expression
                equality_expression
                 relational_expression
                  shift_expression
                   additive_expression
                    multiplicative_expression
                     cast_expression
                      unary_expression
                       postfix_expression
                        primary_expression
                         I_CONSTANT
3
=====86c8b010=====
!!Left:1!!
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 86c01010
=====86c01010=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 86b77010
=====86b77010=====
line=4
===G1===
===dec===
5 
===def===

===use===

===pure===

  To 85e5f010
=====85e5f010=====
line=4
===G1===
===dec===

===def===

===use===
2 
===pure===

  To 85e1a010
=====85e1a010=====
line=4
===G1===
===dec===

===def===
5 
===use===
2 
===pure===
(5,2) 
  To 86bbc010
=====86bbc010=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4af0efa0
=====4af0efa0=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4af97ce0
=====4af97ce0=====
line=5
===G1===
===dec===

===def===
2 
===use===
4 
===pure===
(2,4) 
  To 4af53640
=====4af53640=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4afdc6f0
=====4afdc6f0=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b065430
=====4b065430=====
line=6
===G1===
===dec===

===def===
4 
===use===
5 
===pure===
(4,5) 
  To 4b020d90
=====4b020d90=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 86c46010
=====86c46010=====
!!Right:1!!
line=0
===G1===
===dec===

===def===

===use===

===pure===

=====4b1bb8e0=====
!!Left:2!!
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b244620
=====4b244620=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b2cd360
=====4b2cd360=====
line=10
===G1===
===dec===

===def===
7 
===use===
-1 
===pure===
(7,-1) 
  To 4b288cc0
=====4b288cc0=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b311a00
=====4b311a00=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b3dede0
=====4b3dede0=====
line=11
===G1===
===dec===

===def===

===use===
7 
===pure===

  To 4b423480
=====4b423480=====
line=11
===G1===
===dec===

===def===

===use===
8 
===pure===

  To 4b467b20
=====4b467b20=====
line=11
===G1===
===dec===
12 
===def===
12 
===use===
7 8 
===pure===

  To 4b4ac1c0
=====4b4ac1c0=====
line=11
===G1===
===dec===

===def===

===use===

===pure===

  To 4b39a740
=====4b39a740=====
line=11
===G1===
===dec===

===def===

===use===
12 
===pure===

  To 4b3560a0
=====4b3560a0=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b4f0860
=====4b4f0860=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b5795a0
=====4b5795a0=====
line=12
===G1===
===dec===

===def===
1 
===use===
7 
===pure===
(1,7) 
  To 4b1fff80
=====4b1fff80=====
!!Right:2!!
line=0
===G1===
===dec===

===def===

===use===

===pure===

=====4b5bdc40=====
!!Left:3!!
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b713d60
=====4b713d60=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b79caa0
=====4b79caa0=====
line=16
===G1===
===dec===
4 
===def===

===use===

===pure===

  To 4b7e1140
=====4b7e1140=====
line=16
===G1===
===dec===

===def===

===use===
-2 
===pure===

  To 4b8257e0
=====4b8257e0=====
line=16
===G1===
===dec===

===def===
4 
===use===
-2 
===pure===
(4,-2) 
  To 4b758400
=====4b758400=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b869e80
=====4b869e80=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b8f2bc0
=====4b8f2bc0=====
line=17
===G1===
===dec===

===def===
2 
===use===
-3 
===pure===
(2,-3) 
  To 4b8ae520
=====4b8ae520=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4b937260
=====4b937260=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4ba04640
=====4ba04640=====
line=18
===G1===
===dec===

===def===

===use===
2 
===pure===

  To 4ba48ce0
=====4ba48ce0=====
line=18
===G1===
===dec===

===def===

===use===
4 
===pure===

  To 4ba8d380
=====4ba8d380=====
line=18
===G1===
===dec===
13 
===def===
13 
===use===
2 4 
===pure===

  To 4bad1a20
=====4bad1a20=====
line=18
===G1===
===dec===

===def===

===use===

===pure===

  To 4b9bffa0
=====4b9bffa0=====
line=18
===G1===
===dec===

===def===

===use===
13 
===pure===

  To 4b97b900
=====4b97b900=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4bb160c0
=====4bb160c0=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4bb9ee00
=====4bb9ee00=====
line=19
===G1===
===dec===
2 
===def===

===use===

===pure===

  To 4bbe34a0
=====4bbe34a0=====
line=19
===G1===
===dec===

===def===

===use===
-4 
===pure===

  To 4bc27b40
=====4bc27b40=====
line=19
===G1===
===dec===

===def===
2 
===use===
-4 
===pure===
(2,-4) 
  To 4bc6c1e0
=====4bc6c1e0=====
line=19
===G1===
===dec===
11 
===def===

===use===

===pure===

  To 4bcf4f20
=====4bcf4f20=====
line=19
===G1===
===dec===

===def===

===use===
2 
===pure===

  To 4bd395c0
=====4bd395c0=====
line=19
===G1===
===dec===

===def===

===use===
4 
===pure===

  To 4bd7dc60
=====4bd7dc60=====
line=19
===G1===
===dec===
14 
===def===
14 
===use===
2 4 
===pure===

  To 4bdc2300
=====4bdc2300=====
line=19
===G1===
===dec===

===def===

===use===

===pure===

  To 4bcb0880
=====4bcb0880=====
line=19
===G1===
===dec===

===def===

===use===
14 
===pure===

  To 4be069a0
=====4be069a0=====
line=19
===G1===
===dec===

===def===
11 
===use===
14 
===pure===
(11,14) 
  To 4bb5a760
=====4bb5a760=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4be4b040
=====4be4b040=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4bf5cac0
=====4bf5cac0=====
line=20
===G1===
===dec===

===def===

===use===
11 
===pure===

  To 4bfa1160
=====4bfa1160=====
line=20
===G1===
===dec===

===def===

===use===
2 
===pure===

  To 4bfe5800
=====4bfe5800=====
line=20
===G1===
===dec===
16 
===def===
16 
===use===
11 2 
===pure===

  To 4c029ea0
=====4c029ea0=====
line=20
===G1===
===dec===

===def===

===use===

===pure===

  To 4bf18420
=====4bf18420=====
line=20
===G1===
===dec===

===def===

===use===
16 
===pure===

  To 4c06e540
=====4c06e540=====
line=20
===G1===
===dec===

===def===

===use===
4 
===pure===

  To 4c0b2be0
=====4c0b2be0=====
line=20
===G1===
===dec===
15 
===def===
15 
===use===
16 4 
===pure===

  To 4c0f7280
=====4c0f7280=====
line=20
===G1===
===dec===

===def===

===use===

===pure===

  To 4bed3d80
=====4bed3d80=====
line=20
===G1===
===dec===

===def===

===use===
15 
===pure===

  To 4be8f6e0
=====4be8f6e0=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4c13b920
=====4c13b920=====
line=0
===G1===
===dec===

===def===

===use===

===pure===

  To 4c1c4660
=====4c1c4660=====
line=21
===G1===
===dec===

===def===
1 
===use===
0 
===pure===
(1,0) 
  To 4b6cf6c0
=====4b6cf6c0=====
!!Right:3!!
line=0
===G1===
===dec===

===def===

===use===

===pure===


===================================
=====4b5bdc40=====
!!Left:3!!
line=0
===G1===
  1:
  2:
  3:
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4b713d60
=====4b713d60=====
line=0
===G1===
  1:
  2:
  3:
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4b79caa0
=====4b79caa0=====
line=16
===G1===
  1:
  2:
  3:
  4:
  5:
  6:
  7:
  8:
  9:
===dec===
4 
===def===

===use===

===pure===

  To 4b7e1140
=====4b7e1140=====
line=16
===G1===
  1:
  2:
  3:
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
-2 
===pure===

  To 4b8257e0
=====4b8257e0=====
line=16
===G1===
  1:
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===
4 
===use===
-2 
===pure===
(4,-2) 
  To 4b758400
=====4b758400=====
line=0
===G1===
  1:
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4b869e80
=====4b869e80=====
line=0
===G1===
  1:
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4b8f2bc0
=====4b8f2bc0=====
line=17
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===
2 
===use===
-3 
===pure===
(2,-3) 
  To 4b8ae520
=====4b8ae520=====
line=0
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4b937260
=====4b937260=====
line=0
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4ba04640
=====4ba04640=====
line=18
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
2 
===pure===

  To 4ba48ce0
=====4ba48ce0=====
line=18
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
4 
===pure===

  To 4ba8d380
=====4ba8d380=====
line=18
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===
13 
===def===
13 
===use===
2 4 
===pure===

  To 4bad1a20
=====4bad1a20=====
line=18
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4b9bffa0
=====4b9bffa0=====
line=18
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
13 
===pure===

  To 4b97b900
=====4b97b900=====
line=0
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4bb160c0
=====4bb160c0=====
line=0
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4bb9ee00
=====4bb9ee00=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===
2 
===def===

===use===

===pure===

  To 4bbe34a0
=====4bbe34a0=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5:
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
-4 
===pure===

  To 4bc27b40
=====4bc27b40=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===
2 
===use===
-4 
===pure===
(2,-4) 
  To 4bc6c1e0
=====4bc6c1e0=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===
11 
===def===

===use===

===pure===

  To 4bcf4f20
=====4bcf4f20=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
2 
===pure===

  To 4bd395c0
=====4bd395c0=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
4 
===pure===

  To 4bd7dc60
=====4bd7dc60=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===
14 
===def===
14 
===use===
2 4 
===pure===

  To 4bdc2300
=====4bdc2300=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4bcb0880
=====4bcb0880=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
14 
===pure===

  To 4be069a0
=====4be069a0=====
line=19
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===
11 
===use===
14 
===pure===
(11,14) 
  To 4bb5a760
=====4bb5a760=====
line=0
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4be4b040
=====4be4b040=====
line=0
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4bf5cac0
=====4bf5cac0=====
line=20
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
11 
===pure===

  To 4bfa1160
=====4bfa1160=====
line=20
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
2 
===pure===

  To 4bfe5800
=====4bfe5800=====
line=20
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===
16 
===def===
16 
===use===
11 2 
===pure===

  To 4c029ea0
=====4c029ea0=====
line=20
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4bf18420
=====4bf18420=====
line=20
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
16 
===pure===

  To 4c06e540
=====4c06e540=====
line=20
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
4 
===pure===

  To 4c0b2be0
=====4c0b2be0=====
line=20
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===
15 
===def===
15 
===use===
16 4 
===pure===

  To 4c0f7280
=====4c0f7280=====
line=20
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4bed3d80
=====4bed3d80=====
line=20
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===
15 
===pure===

  To 4be8f6e0
=====4be8f6e0=====
line=0
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4c13b920
=====4c13b920=====
line=0
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

  To 4c1c4660
=====4c1c4660=====
line=21
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===
1 
===use===
0 
===pure===
(1,0) 
  To 4b6cf6c0
=====4b6cf6c0=====
!!Right:3!!
line=0
===G1===
  1: -3
  2:
  3: -2
  4:
  5: -4
  6:
  7:
  8:
  9:
===dec===

===def===

===use===

===pure===

