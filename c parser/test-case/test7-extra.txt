int *sum;
void foo(int x)
{
	*sum*=x;
	if (x==1)
	{
		return ;
	}
	foo(x-1);
}
int main()
{
	sum=malloc(sizeof(int));
	foo(10);
	return 0;
}
234
translation_unit
 translation_unit
  translation_unit
   external_declaration
    declaration
     declaration_specifiers
      INT
     init_declarator_list
      init_declarator
       declarator
        *
        direct_declarator
         sum
  external_declaration
   function_definition
    declaration_specifiers
     VOID
    declarator
     direct_declarator
      direct_declarator
       foo
      parameter_type_list
       parameter_list
        parameter_declaration
         declaration_specifiers
          INT
         declarator
          direct_declarator
           x
    compound_statement
     block_item_list
      block_item_list
       block_item_list
        block_item
         statement
          expression_statement
           expression
            assignment_expression
             unary_expression
              *
              cast_expression
               unary_expression
                postfix_expression
                 sum
             *=
             assignment_expression
              conditional_expression
               logical_or_expression
                logical_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         cast_expression
                          unary_expression
                           postfix_expression
                            x
       block_item
        statement
         IF
          expression
           assignment_expression
            conditional_expression
             logical_or_expression
              logical_and_expression
               inclusive_or_expression
                exclusive_or_expression
                 and_expression
                  equality_expression
                   equality_expression
                    relational_expression
                     shift_expression
                      additive_expression
                       multiplicative_expression
                        cast_expression
                         unary_expression
                          postfix_expression
                           x
                   relational_expression
                    shift_expression
                     additive_expression
                      multiplicative_expression
                       cast_expression
                        unary_expression
                         postfix_expression
                          primary_expression
                           I_CONSTANT
          statement
           compound_statement
            block_item_list
             block_item
              statement
               RETURN
      block_item
       statement
        expression_statement
         expression
          assignment_expression
           conditional_expression
            logical_or_expression
             logical_and_expression
              inclusive_or_expression
               exclusive_or_expression
                and_expression
                 equality_expression
                  relational_expression
                   shift_expression
                    additive_expression
                     multiplicative_expression
                      cast_expression
                       unary_expression
                        function
                         postfix_expression
                          foo
                         argument_expression_list
                          assignment_expression
                           conditional_expression
                            logical_or_expression
                             logical_and_expression
                              inclusive_or_expression
                               exclusive_or_expression
                                and_expression
                                 equality_expression
                                  relational_expression
                                   shift_expression
                                    additive_expression
                                     additive_expression
                                      multiplicative_expression
                                       cast_expression
                                        unary_expression
                                         postfix_expression
                                          x
                                     multiplicative_expression
                                      cast_expression
                                       unary_expression
                                        postfix_expression
                                         primary_expression
                                          I_CONSTANT
 external_declaration
  function_definition
   declaration_specifiers
    INT
   declarator
    direct_declarator
     direct_declarator
      main
   compound_statement
    block_item_list
     block_item_list
      block_item_list
       block_item
        statement
         expression_statement
          expression
           assignment_expression
            unary_expression
             postfix_expression
              sum
            =
            assignment_expression
             conditional_expression
              logical_or_expression
               logical_and_expression
                inclusive_or_expression
                 exclusive_or_expression
                  and_expression
                   equality_expression
                    relational_expression
                     shift_expression
                      additive_expression
                       multiplicative_expression
                        cast_expression
                         unary_expression
                          function
                           postfix_expression
                            malloc
                           argument_expression_list
                            assignment_expression
                             conditional_expression
                              logical_or_expression
                               logical_and_expression
                                inclusive_or_expression
                                 exclusive_or_expression
                                  and_expression
                                   equality_expression
                                    relational_expression
                                     shift_expression
                                      additive_expression
                                       multiplicative_expression
                                        cast_expression
                                         unary_expression
                                          type_name
                                           specifier_qualifier_list
                                            INT
      block_item
       statement
        expression_statement
         expression
          assignment_expression
           conditional_expression
            logical_or_expression
             logical_and_expression
              inclusive_or_expression
               exclusive_or_expression
                and_expression
                 equality_expression
                  relational_expression
                   shift_expression
                    additive_expression
                     multiplicative_expression
                      cast_expression
                       unary_expression
                        function
                         postfix_expression
                          foo
                         argument_expression_list
                          assignment_expression
                           conditional_expression
                            logical_or_expression
                             logical_and_expression
                              inclusive_or_expression
                               exclusive_or_expression
                                and_expression
                                 equality_expression
                                  relational_expression
                                   shift_expression
                                    additive_expression
                                     multiplicative_expression
                                      cast_expression
                                       unary_expression
                                        postfix_expression
                                         primary_expression
                                          I_CONSTANT
     block_item
      statement
       RETURN
        expression
         assignment_expression
          conditional_expression
           logical_or_expression
            logical_and_expression
             inclusive_or_expression
              exclusive_or_expression
               and_expression
                equality_expression
                 relational_expression
                  shift_expression
                   additive_expression
                    multiplicative_expression
                     cast_expression
                      unary_expression
                       postfix_expression
                        primary_expression
                         I_CONSTANT
final analysis!========================
=====4437c230=====
line=0
tag=-1
call_index=-1
===G1===
  1:
  2:
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===
1 
===def===

===use===

===pure===

===you can ues===

  To 4437bdd0
=====4437bdd0=====
line=1
tag=-1
call_index=-1
===G1===
  1:
  2:
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===
2 
===def===

===use===

===pure===

===you can ues===
2 
  To 44380eb0
=====44380eb0=====
line=0
tag=-1
call_index=-1
===G1===
  1:
  2:
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===

===pure===

===you can ues===
2 
  To 443811d0
=====443811d0=====
!!Left:100003!!
line=100000
tag=-1
call_index=-1
===G1===
  1:
  2:
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===

===pure===

===you can ues===
2 
  To 443813c0
=====443813c0=====
line=100013
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===
[2 unary:0] 
===use===
[-1 unary:1] 
===pure===
([2 unary:0],[-1 unary:1]) 
===you can ues===
2 
  To 443816e0
=====443816e0=====
line=100014
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===
[0 unary:0] 
===pure===

===you can ues===
2 
  To 44381910
=====44381910=====
line=100014
tag=3
call_index=2
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===
3 4 
===def===
[3 unary:0] 
===use===
[0 unary:0] 
===pure===
([3 unary:0],[0 unary:0]) 
===you can ues===
2 
  To 443824b0
=====443824b0=====
!!Left:200001!!
line=200000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===
5 
===def===
[5 unary:0] 
===use===
[3 unary:0] 
===pure===
([5 unary:0],[3 unary:0]) 
===you can ues===
4 2 
  To 443827f0
=====443827f0=====
line=200004
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===
[2 unary:1] 
===use===
[5 unary:0] [2 unary:1] 
===pure===

===you can ues===
4 2 
  To 44382a30
=====44382a30=====
line=200005
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===
[5 unary:0] [0 unary:0] 
===pure===

===you can ues===
4 2 
  To 44382cd0
  To 44383090
=====44382cd0=====
!!Left:200002!!
line=200000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===

===pure===

===you can ues===
4 2 
  To 44382ec0
=====44382ec0=====
!!Right:200001!!
line=200000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===

===pure===

===you can ues===
2 
  To 44381c90
=====44381c90=====
line=100014
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===
[4 unary:0] 
===pure===

===you can ues===
2 
  To 44381f40
=====44381f40=====
line=100015
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===
[1 unary:0] 
===use===
[0 unary:0] 
===pure===
([1 unary:0],[0 unary:0]) 
===you can ues===
2 
  To 443822a0
=====443822a0=====
!!Right:100003!!
line=100000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===

===pure===

===you can ues===
2 
  To 44381040
=====44381040=====
line=0
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===

===pure===

===you can ues===
2 
=====44383090=====
line=200000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===

===pure===

===you can ues===
4 2 
  To 44383280
=====44383280=====
line=200009
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===
[5 unary:0] [0 unary:0] 
===pure===

===you can ues===
4 2 
  To 44383520
=====44383520=====
line=200009
tag=3
call_index=1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===
6 7 
===def===
[6 unary:0] 
===use===
[0 unary:0] 
===pure===
([6 unary:0],[0 unary:0]) 
===you can ues===
4 2 
  To 44383b30
=====44383b30=====
!!Left:300001!!
line=300000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===
8 
===def===
[8 unary:0] 
===use===
[6 unary:0] 
===pure===
([8 unary:0],[6 unary:0]) 
===you can ues===
4 2 
  To 44383e70
=====44383e70=====
line=300004
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===
[2 unary:1] 
===use===
[8 unary:0] [2 unary:1] 
===pure===

===you can ues===
4 2 
  To 443840b0
=====443840b0=====
line=300005
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===
[8 unary:0] [0 unary:0] 
===pure===

===you can ues===
4 2 
  To 44384310
  To 443846d0
=====44384310=====
!!Left:300002!!
line=300000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===

===pure===

===you can ues===
4 2 
  To 44384500
=====44384500=====
!!Right:300001!!
line=300000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===

===pure===

===you can ues===
4 2 
  To 443838a0
=====443838a0=====
line=200009
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===
[7 unary:0] 
===pure===

===you can ues===
4 2 
  To 44382ec0
=====443846d0=====
line=300000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===

===pure===

===you can ues===
4 2 
  To 443848c0
=====443848c0=====
line=300009
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===
[8 unary:0] [0 unary:0] 
===pure===

===you can ues===
4 2 
  To 44384b60
=====44384b60=====
line=300009
tag=3
call_index=1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===
9 10 
===def===
[9 unary:0] 
===use===
[0 unary:0] 
===pure===
([9 unary:0],[0 unary:0]) 
===you can ues===
4 2 
  To 44385170
=====44385170=====
!!Left:400001!!
line=400000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===
11 
===def===
[11 unary:0] 
===use===
[9 unary:0] 
===pure===
([11 unary:0],[9 unary:0]) 
===you can ues===
4 2 
  To 443854b0
=====443854b0=====
line=400004
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===
[2 unary:1] 
===use===
[11 unary:0] [2 unary:1] 
===pure===

===you can ues===
4 2 
  To 443856f0
=====443856f0=====
line=400005
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===
[11 unary:0] [0 unary:0] 
===pure===

===you can ues===
4 2 
  To 44385950
  To 44385d10
=====44385950=====
!!Left:400002!!
line=400000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===

===pure===

===you can ues===
4 2 
  To 44385b40
=====44385b40=====
!!Right:400001!!
line=400000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===

===pure===

===you can ues===
4 2 
  To 44386520
  To 44384ee0
=====44386520=====
line=400009
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===
[10 unary:0] 
===pure===

===you can ues===
4 2 
  To 44385b40
=====44384ee0=====
line=300009
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===

===dec===

===def===

===use===
[10 unary:0] 
===pure===

===you can ues===
4 2 
  To 44384500
=====44385d10=====
line=400000
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===

===pure===

===you can ues===
4 2 
  To 44385f00
=====44385f00=====
line=400009
tag=-1
call_index=-1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===

===def===

===use===
[11 unary:0] [0 unary:0] 
===pure===

===you can ues===
4 2 
  To 443861a0
=====443861a0=====
line=400009
tag=3
call_index=1
===G1===
  1:
  2: -1
  3:
  4:
  5:
  6:
  7:
  8:
  9:
  10:
  11:
  12:
  13:
===G2===

===G3===
 -1
===dec===
12 13 
===def===
[12 unary:0] 
===use===
[0 unary:0] 
===pure===
([12 unary:0],[0 unary:0]) 
===you can ues===
4 2 
  To 44385170
